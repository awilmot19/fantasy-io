<!DOCTYPE html>

<head>
  <link href="/css/style.css" rel="stylesheet" type="text/css">
  <link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">
</head>

<body>

  <div class="positions">
    {% for entry in site.data.matchups %}
    {% assign position = forloop.index %}
      <div class="position-class">
        <div class="position-card">
          {% for player in entry.players %}
            {% assign loopindex = forloop.index | modulo:2 %}
            <div class="player player{{ loopindex }}">
              <div class="player-prof">
                <img class="player-pic" src="{{ player.image }}">
                <h4>{{ player.name }}</h4>
                {% if position != 8 %}
                  <h5>#{{ player.number }}, {{ player.team }}</h5>
                {% endif %}
              </div>
              <div class="player-stats">
                <div class="stats-background" style="background-image: url({{ player.team-image }})"></div>
                <div class="team-color" data-options='{"teamColor":"{{ player.team-color }}"}'></div>
                {% for stat in player.stats %}
                  <div class="stat1">
                    <div class="stat-title">
                      <h3>{{ stat.statName }}</h3>
                    </div>
                    <div class="stat-value">
                      <h4 class="stat-ranking">{{ stat.rank }}</h4>
                      {% if forloop.last %}
                        <img src="{{ stat.statVal }}">
                      {% else %}
                        <h3>{{ stat.statVal }}</h3>
                      {% endif %}
                    </div>
                  </div>
                {% endfor %}
              </div>
            </div>
            {% if forloop.first %}
              <div class="position chosen-matchup">
                <h2>{{ entry.title }}</h2>
                <div class="toggler">
                  <div class="circle"></div>
                </div>
                <img src="/images/UI/expandDownWhite.png" class="matchup-expander">
              </div>
            {% elsif loopindex == 1 %}
              <div class="position">
                <!-- <h2>{{ entry.title }}</h2> -->
                <button class="switch-matchup">Choose Matchup</button>
              </div>
            {% else %}
              {% unless forloop.last %}
                </div>
                <div class="position-card">
              {% endunless %}
            {% endif %}
          {% endfor %}
        </div>
      </div>
    {% endfor %}

  </div>
  <div id="images"></div>
</body>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery.transit/0.9.12/jquery.transit.js"></script>
<script type="text/javascript" src="
https://cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.3/jquery.easing.min.js"></script>

<script>
  $(document).ready(function() {

    // var nflAPI = "http://api.fantasy.nfl.com/v1/players/stats?statType=seasonStats&season=2016&week=6&format=json";
    // $.getJSON( nflAPI )
    //   .done(function( data ) {
    //     $.each( data.items, function( i, item ) {
    //       console.log(item);
    //     });
    //   });

    var inputJSON, outputJSON;

    $.ajax({
      type: 'GET',
      url: '/assets/qb.json',
      async: false,
      success: function(data) {
        outputJSON = data;
      },
      error: function() {
        console.log("Nice try");
      }
    });

    $.ajax({
      type: 'GET',
      url: 'http://api.fantasy.nfl.com/v1/players/stats?statType=seasonStats&season=2016&week=7&position=QB&format=json',
      async: false,
      success: function(data) {
        inputJSON = data;
      },
      error: function() {
        console.log("Nah bra");
      }
    });

    updateQBs(inputJSON, outputJSON);
    //
    //
    function updateQBs(inJSON, outJSON) {
      //console.log(inJSON, outJSON);
      var allPlayers = inJSON["players"];
      var outPlayer, inPlayer;
      var QBdata;
      console.log("suh dude?");
      //console.log(allPlayers);
      $.each(outJSON, function(i, player) {
        //console.log(player);
        for (var i = 0; i < allPlayers.length; i++) {
          if (allPlayers[i]["name"] === player["name"]) {
            outPlayer = player["stats"];
            inPlayer = allPlayers[i]["stats"];
            outPlayer[0]["statVal"] = ((inPlayer["5"])/(inPlayer["1"])).toFixed(1);
            outPlayer[1]["statVal"] = ((inPlayer["14"])/(inPlayer["1"])).toFixed(1);
            outPlayer[2]["statVal"] = addValues(inPlayer["6"], inPlayer["15"]) + "/" + addValues(inPlayer["7"], inPlayer["30"]);
            outPlayer[4]["statVal"] = ((allPlayers[i]["seasonPts"])/(inPlayer["1"])).toFixed(2);
            console.log(outPlayer);
            QBdata.push(outPlayer);
          }
        }
      });
      var url = 'data:text/json;charset=utf8,' + encodeURIComponent(QBdata);
      window.open(url, '_blank');
      window.focus();
    }

    function addValues(a, b) {
      a = Number(a || 0);
      b = Number(b || 0);
      return a+b;
    }

    // var rwilson = {"id":"2532975","esbid":"WIL777781","gsisPlayerId":"00-0029263","name":"Russell Wilson","position":"QB","teamAbbr":"SEA","stats":{"1":"1","2":"37","3":"24","4":"13","5":"225","8":"1","13":"1","14":"-2","20":"1","21":"-1","31":"2","75":"1"},"seasonPts":81.56,"seasonProjectedPts":284.06,"weekPts":8.7,"weekProjectedPts":15.04}
    //
    // console.log(rwilson["name"]);
    // var statTest = rwilson["stats"]["9"];
    // if (statTest) {
    //   console.log(statTest);
    // }
    // else {
    //   console.log("0");
    // }

    // 1. Games Played !!
    // 2. Pass Attempts !!
    // 3. Pass Completions !!
    // 4. Pass Incompletions !!
    // 5. Pass Yards !!
    // 6. Passing Touchdowns !!
    // 7. Interceptions !!
    // 8. Sacks !!
    // 13. Rush Attempts !!
    // 14. Rush Yards !!
    // 15. Rushing TDs !!
    // 20. Receptions !!
    // 21. Receiving Yards !!
    // 22. Receiving TDs !!
    // 30. Fumbles Lost !!
    // 31. Fumbles !!

    var rankings = $(document).find('.stat-ranking');
    var rank, rankValue;
    for (var i = 0; i < rankings.length; i++) {
      rank = $(rankings[i]);
      rankValue = Number(rank.html().substring(0, rank.html().length - 2));
      //console.log(rankValue);
      if (rankValue < 11) {
        rank.css("color", "#3FCE98");
      }
      else if (rankValue < 21) {
        rank.css("color", "#DAA606")
      }
      else {
        rank.css("color", "#E7252E");
      }
    }

    $('.position-class').children(':first-child').addClass('matchup-card');

    var $classHeight = $('.matchup-card').height();
    $('.position-class').height($classHeight);

    var posClasses = $('.positions').find('.position-class');
    //console.log(posClasses);
    for (var i = 0; i < posClasses.length; i++) {
      var $currClass = $(posClasses[i]);
      //console.log($currClass);
      var hiddenCards = $currClass.find('.position-card:not(.matchup-card)');
      //console.log(hiddenCards);
      for (var j = 0; j < hiddenCards.length; j++) {
        var $currCard = $(hiddenCards[j]);
        //console.log($currCard);
        //console.log($currCard.position().top);
        var cardTop = -1 * $currCard.position().top;
        $currCard.css({
          top: cardTop
        });
      }
    }

    $('.switch-matchup').on('click', function() {
      var $leftNewChosen = $(this).parent().prev();
      var $rightNewChosen = $(this).parent().next();
      var $leftOldChosen = $(this).parent().parent().siblings('.matchup-card').children('.player1');
      var $rightOldChosen = $(this).parent().parent().siblings('.matchup-card').children('.player0');
      if ((($leftOldChosen).offset().top) - ($leftOldChosen.parent().parent().offset().top) == 0) {
        $leftOldChosen.parent().removeClass('matchup-card');
        $leftNewChosen.addClass('leftNew');
        $rightNewChosen.addClass('rightNew');
        $leftOldChosen.css("background", "#ddd");
        $rightOldChosen.css("background", "#ddd");
        $leftOldChosen.removeClass('chosen-player other-player').addClass('leftOld');
        $rightOldChosen.removeClass('chosen-player other-player').addClass('rightOld');
        resetToggler($(this));
        $( "<div class='placeholder1'></div>" ).insertAfter( $( ".leftOld" ) );
        $( "<div class='placeholder2'></div>" ).insertAfter( $( ".rightOld" ) );
        var newTop = $('.leftNew').offset().top - $('.leftNew').parent().parent().offset().top;
        var altTop = -1 * newTop;
        $('.rightNew').animate({
          top: altTop
        }, 1000 );
        $('.rightOld').animate({
          top: newTop
        }, 1000 );
        $('.leftNew').animate({
          top: altTop
        }, 1000 );
        $('.leftOld').animate({
          top: newTop
        }, 1000, function() {
          $('.leftNew').before($('.leftOld'));
          $('.rightNew').before($('.rightOld'));
          $('.placeholder1').before($('.leftNew'));
          $('.placeholder2').before($('.rightNew'));
          $('.leftNew').css("top", "0px");
          $('.rightNew').css("top", "0px");
          $('.placeholder1').remove();
          $('.placeholder2').remove();
          $('.leftOld').css("top", "0px");
          $('.rightOld').css("top", "0px");
          $('.leftNew').removeClass('leftNew');
          $('.rightNew').removeClass('rightNew');
          $('.leftOld').removeClass('leftOld');
          $('.rightOld').removeClass('rightOld');
          $leftNewChosen.parent().addClass('matchup-card');
        } );
      }
    })

    $('.toggler').on('click', function(e) {
      if (e.target !== this)
        return;
      var circleObj = $(this).children('.circle');
      var chosenTeamColor;
      var player1 = $(this).parent().prev();
      var player2 = $(this).parent().next();
      player1.removeClass('chosen-player other-player');
      player2.removeClass('chosen-player other-player');
      //console.log(e);
      if (e.offsetX < $(this).width()/2.5) {
        circleObj.css("margin-left","0.0vmax");
        player1.addClass('chosen-player');
        player2.addClass('other-player');
        chosenTeamColor = player1.find('.team-color').data("options").teamColor;
        player1.css("background-color", chosenTeamColor);
        player2.css("background-color", "#aaa");
        $(this).css("background","linear-gradient(90deg, #0070CC, #ddd)");
      }
      else if (e.offsetX > ($(this).width() - $(this).width()/2.5)){
        circleObj.css("margin-left","3.8vmax");
        player2.addClass('chosen-player');
        player1.addClass('other-player');
        chosenTeamColor = player2.find('.team-color').data("options").teamColor;
        player2.css("background-color", chosenTeamColor);
        player1.css("background-color", "#aaa");
        $(this).css("background","linear-gradient(-90deg, #0070CC, #ddd)");
      }
      else {
        circleObj.css("margin-left","1.9vmax");
        player1.css("background-color", "#ddd");
        player2.css("background-color", "#ddd");
        $(this).css("background","lightgray");
      }
    })

    function resetToggler(button) {
      var toggle = button.parent().parent().parent().find('.toggler');
      toggle.find('.circle').css("margin-left","1.9vmax");
      console.log(toggle.find('.circle'));
      toggle.css("background","lightgray");
    }

    $('.matchup-expander').on('click', function(e) {
      var buttonClicked = this;
      buttonClicked.style.pointerEvents = 'none';
      //console.log($(this).parent().parent().parent());
      $('.matchup-expander').not(this).removeClass('expanded');
      $('.matchup-expander').not(this).transition({
        perspective: '60px',
        rotateX: '0deg'
      });
      var cardHeight = $('.position-card').height();
      $('.position-class').animate({
        height: cardHeight
      }, { duration: 700, easing: "easeInOutCubic", queue: false });
      if (!$(this).hasClass('expanded')) {
        $(this).addClass('expanded');
        var expandClass = $(this).parent().parent().parent();
        var expandBottom = expandClass.offset().top + expandClass.outerHeight(true);
        //console.log(expandBottom);
        var moveClass = $(this).parent().parent().parent().next();
        var classHeight = $(expandClass).children().length * $('.position-card').height();
        //record the elem so you don't crawl the DOM everytime
        //console.log(classHeight);
        var posCards = $(expandClass).children();
        //console.log(posCards);
        for (var i = 1; i < posCards.length; i++) {
          $(posCards[i]).children('.player1').addClass('leftNew');
          $(posCards[i]).children('.player0').addClass('rightNew');
          var cardTop = $('.position-card').height() * i;
          $(posCards[i]).animate({
            top: "0"
          }, 700, "easeInOutCubic");
        }
        $(expandClass).animate({
          height: classHeight
        }, 700, "easeInOutCubic", function() {
          buttonClicked.style.pointerEvents = 'visible';
            $('.leftNew').removeClass('leftNew');
            $('.rightNew').removeClass('rightNew');
        });
        $(this).transition({
          perspective: '60px',
          rotateX: '179.9deg'
        }, 700, "easeInOutCubic");
      }
      else {
        var collClass = $(this).parent().parent().parent();
        //console.log(collClass);
        collapseClass(collClass, buttonClicked);
        $('.expanded').removeClass('expanded');
        $(this).transition({
          perspective: '60px',
          rotateX: '0deg'
        }, 700, "easeInOutCubic");
      }
    })

    function collapseClass(expanded, expandButton) {
      var cardList = $(expanded).children();
      for (var i = 1; i < cardList.length; i++) {
        var currCard = $(cardList[i]);
        currCard.children('.player1').addClass('leftOld');
        currCard.children('.player0').addClass('rightOld');
        var newTop = -1 * currCard.height() * i;
        currCard.animate({
          top: newTop
        }, 700, "easeInOutCubic", function() {
          expandButton.style.pointerEvents = 'visible';
          $('.leftOld').removeClass('leftOld');
          $('.rightOld').removeClass('rightOld');
        });
      }
    }

  });
</script>

</html>
